#############################################
# CREALITY ENDER 3 PRO UPGRADE              #
# CR-TOUCH                                  #
# SPIRITE PRO                               #
# CM 4.2.7                                  #
# SCREEN "BLUE"                             #
# WLED                                      #
#############################################
#                                           #
#       Ender 3 pro config barry            #
#                                           #
#############################################

#############################################
#             INCLUDE .cfg                  #
#############################################

[include mainsail.cfg]

[include macro_bed_mesh.cfg]

[include macro_wled.cfg]

#############################################
#                 STEPPER X                 #
#############################################

[stepper_x]

step_pin: PB9
dir_pin: PC2
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
#full_steps_per_rotation: 200
endstop_pin: ^PA5
position_endstop: 0
position_max: 235
homing_speed: 50

#############################################
#                 STEPPER Y                 #
#############################################

[stepper_y]

step_pin: PB7
dir_pin: PB8
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
#full_steps_per_rotation: 200
endstop_pin: ^PA6
position_endstop: 0
position_max: 235
homing_speed: 50

#############################################
#                  STEPPER Z                #
#############################################

[stepper_z]

step_pin: PB5
dir_pin: !PB6
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
#full_steps_per_rotation: 200
#position_endstop: 0.0                     # disable to use BLTouch
#endstop_pin: ^PA7                         # disable to use BLTouch
endstop_pin: probe:z_virtual_endstop        # enable to use BLTouch
position_min: -5                            # enable to use BLTouch
position_max: 250

#############################################
#                  EXTRUDER                 #
#############################################

[extruder]

max_extrude_only_distance: 100.0
step_pin: PB3
dir_pin: PB4
enable_pin: !PC3
microsteps: 16
gear_ratio: 3.5:1
rotation_distance: 26.359
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
control: pid
pid_Kp: 23.561
pid_Ki: 1.208
pid_Kd: 114.859
min_temp: 0
max_temp: 300
min_extrude_temp: 170

#############################################
#                  CR-TOUCH                 #
#############################################

[bltouch]

sensor_pin: ^PB1
control_pin: PB0
x_offset: -31.8
y_offset: -40.5
#z_offset: 2.816
speed : 35
samples : 3
sample_retract_dist : 10.0
lift_speed : 40
samples_tolerance_retries : 3
probe_with_touch_mode: true
stow_on_each_sample: false
pin_up_touch_mode_reports_triggered : True

#############################################
#                SAFE Z HOME                #
#############################################

[safe_z_home]            # enable for BLTouch

home_xy_position: 143,167
speed: 150
z_hop: 10
z_hop_speed: 5

#############################################
#                BED MESH                   #
#############################################

[bed_mesh]

speed: 200
horizontal_move_z: 10
mesh_min: 30, 35        # Need to handle head distance with cr-touch (bl_touch)
mesh_max: 190, 190      # Max probe range
probe_count: 3, 3       # Nombre de point de controle par ligne
algorithm: bicubic
zero_reference_position: 131.5, 108

#############################################
#                BED SCREWS                 #
#############################################

[bed_screws]

screw1: 30, 35
screw2: 190, 35
screw3: 190, 190
screw4: 30,190

#default = "screw1: 30,35"
#default = "screw2: 200,35"
#default = "screw3: 200,205"
#default = "screw4: 30,200"

#############################################
#           SCREWS TILT ADJUST              #
#############################################

[screws_tilt_adjust]

screw1_name: Avant gauche
screw1: 30, 35
#defaut "screw1 :75, 35"
screw2_name: Avant droit
screw2: 205, 35
#defaut "screw2 246, 35"
screw3_name: Arriere droit
screw3: 200, 205
#defaut "screw3 246, 205"
screw4_name: Arriere Gauche
screw4: 30,200
#defaut "screw4 75, 205"
horizontal_move_z: 10
speed: 200.
screw_thread: CW-M4

#############################################
#                HEATER BED                 #
#############################################

[heater_bed]

heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

#############################################
#                   FAN                     #
#############################################

[fan]

pin: PA0

#############################################
#                   MCU                     #
#############################################

[mcu]

serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

#############################################
#                   MCU  RPI                #
#############################################

#[mcu btt_adxl345]
#serial: /dev/serial/by-id/usb-Klipper_rp2040_E66118604B572427-if00


#[adxl345]
#cs_pin: btt_adxl345:gpio9
#spi_bus: spi1a
#spi_software_sclk_pin: btt_adxl345:gpio10
#spi_software_mosi_pin: btt_adxl345:gpio11
#spi_software_miso_pin: btt_adxl345:gpio8
#axes_map: -x,-y,-z

#[resonance_tester]
#probe_points: 100, 100, 20
#accel_chip: adxl345


#############################################
#              VIRTUAL SDCARD               #
#############################################

[virtual_sdcard]

path : ~/printer_data/gcodes
on_error_gcode : CANCEL_PRINT

#############################################
#            TEMPERATURE BEELINK            #
#############################################

[temperature_sensor Beelink]

sensor_type: temperature_host
min_temp: 10
max_temp: 100

#############################################
#         TEMPERATURE CM IMPRIMANTE         #
#############################################

[temperature_sensor mcu_ender_3_pro]

sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#############################################
#           PRINTER ENDER 3 PRO             #
#############################################

[printer]

kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

#############################################
#              BOARD PINS ECRAN             #
#############################################

[board_pins]

aliases:
    EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
    EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
    PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PC6

#############################################
#                  DISPLAY                  #
#############################################

[display]

lcd_type : st7920
cs_pin : PB12
sclk_pin : PB13
sid_pin : PB15
encoder_pins : ^PB14, ^PB10
click_pin : ^!PB2

#############################################
#               INPUT SHAPER                #
#############################################

[input_shaper]

shaper_freq_x: 100
shaper_freq_y: 100
shaper_type: mzv

#############################################
#             FIRMWARE RETRACT              #
#############################################

[firmware_retraction]

retract_length: 0.8
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 40
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 40
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

#############################################
#             PAUSE AND RESUME              #
#############################################

[pause_resume]

#############################################
#             DISPLAY STATUS                #
#############################################

[display_status]

#############################################
#                 RESPOND                   #
#############################################

[respond]

#############################################
#               ENDSTOP phase               #
#############################################

[endstop_phase]

#############################################
#                   MACRO                   #
#############################################

[gcode_macro G29]

  gcode:
    G28
    BED_MESH_CALIBRATE
    G0 X0 Y0 Z10 F6000
    BED_MESH_PROFILE save=default
    SAVE_CONFIG

#############################################

[gcode_macro PRINT_START]

gcode:
    {% set bed_temp = params.BED_TEMP|default(60) %}
    {% set extruder_temp = params.EXTRUDER_TEMP|default(200) %}
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
 
    G92 E0 ; Réinitialiser l'extrudeuse

    G28

    M140 S{bed_temp}
    M104 S{extruder_temp}
    M190 S{bed_temp} 
    
    M104 S{extruder_temp} ;Démarrer le chauffage de l'extrudeuse
    G28 ; Accueil tous axes
    G29 ; Mise à niveau automatique du lit, maille 16 points
    G1Z2.0F3000 ; Déplacez légèrement l'axe Z vers le haut pour éviter de rayer le lit chauffant.
    G0 X2 Y0 ; Déplacer vers la gauche du pinceau
    M109 S{extruder_temp} ; Attendez que l'extrudeuse atteigne la température avant de continuer

    G1Z3.0F3000 ; Déplacez légèrement l'axe Z vers le haut pour éviter de s'écraser avec le clip de retenue du lit.
    G1 X0.1 Y35 F5000.0 ; Se déplacer vers la position de départ
    G1 Z0.3 F5000.0 ; Abaissez l'axe Z vers le bas

    G1 X0.1 Y200.0 Z0.3 F1500.0 E15 ; Tracez la première ligne sur le côté gauche du lit
    G1 X0.4 Y200.0 Z0.3 F5000.0 ; Déplacez-vous un peu sur le côté
    G1 X0,4 Y35 Z0,3 F1500.0 E30 ; Tracez la deuxième ligne de l'arrière vers l'avant

    G92 E0 ; Réinitialiser l'extrudeuse
    G1Z3.0F3000 ; Déplacez légèrement l'axe Z vers le haut pour éviter de rayer le lit chauffant.
    G1 X5 Y35 Z0.3 F5000.0 ; Déplacez-vous pour éviter l’écrasement des gouttes

#############################################

[gcode_macro CANCEL_PRINT]

description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro PAUSE'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro PAUSE'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

#############################################

[gcode_macro PAUSE]

description = Pause the actual running print
rename_existing = PAUSE_BASE
variable_restore_idle_timeout = 0
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0%}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

#############################################

[gcode_macro RESUME]

description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	
	
	{% if printer['gcode_macro PAUSE'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro PAUSE'].restore_idle_timeout}
	{% endif %}
	{% if printer.idle_timeout.state|upper == "IDLE" %}
	{% if last_extruder_temp.restore %} M109 S{last_extruder_temp.temp} {% endif %}
	{% endif %}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}

#############################################

[gcode_macro SET_PAUSE_NEXT_LAYER]

description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

#############################################

[gcode_macro SET_PAUSE_AT_LAYER]

description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

#############################################

[gcode_macro SET_PRINT_STATS_INFO]

rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

#############################################

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]

description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

#############################################

[gcode_macro _CLIENT_EXTRUDE]

description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Extruder not hot enough'
	{% endif %}
	{% endif %}

#############################################

[gcode_macro _CLIENT_RETRACT]

description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}
    
#############################################
 
#[gcode_macro bed_mesh]

#gcode=
 #WLED_ON STRIP=klipper PRESET=1
 
#############################################

#[gcode_macro bed_mesh]

#description: Turn WLED strip on using optional preset and resets led colors
#gcode:
#  {% set strip = params.STRIP|default("klipper")|string %}
#  {% set preset = params.PRESET|default(1)|int %}

#  {action_call_remote_method("set_wled_state",
#                             strip=strip,
#                             state=True,
#                             preset=preset)}

#############################################

[gcode_macro chauffe]

gcode=
 WLED_ON STRIP=klipper PRESET=2

#############################################

[gcode_macro chauffe]

description: Turn WLED strip on using optional preset and resets led colors
gcode:
  {% set strip = params.STRIP|default("klipper")|string %}
  {% set preset = params.PRESET|default(2)|int %}

  {action_call_remote_method("set_wled_state",
                             strip=strip,
                             state=True,
                             preset=preset)}

#############################################

[gcode_macro print]

gcode=
 WLED_ON STRIP=klipper PRESET=3
#############################################

[gcode_macro print]

description: Turn WLED strip on using optional preset and resets led colors
gcode:
  {% set strip = params.STRIP|default("klipper")|string %}
  {% set preset = params.PRESET|default(3)|int %}

  {action_call_remote_method("set_wled_state",
                             strip=strip,
                             state=True,
                             preset=preset)} 

#############################################

[gcode_macro fini]

gcode=
 WLED_ON STRIP=klipper PRESET=4

#############################################

[gcode_macro fini]

description: Turn WLED strip on using optional preset and resets led colors
gcode:
  {% set strip = params.STRIP|default("klipper")|string %}
  {% set preset = params.PRESET|default(4)|int %}

  {action_call_remote_method("set_wled_state",
                             strip=strip,
                             state=True,
                             preset=preset)}
                             
#############################################

[gcode_macro off]

gcode=
 WLED_ON STRIP=klipper PRESET=5

############################################

[gcode_macro off]

description: Turn WLED strip on using optional preset and resets led colors
gcode:
  {% set strip = params.STRIP|default("klipper")|string %}
  {% set preset = params.PRESET|default(5)|int %}

  {action_call_remote_method("set_wled_state",
                             strip=strip,
                             state=True,
                             preset=preset)}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 3.124
#*#
#*# [heater_bed]
#*#
#*# [extruder]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.044384, -0.007718, 0.013949
#*# 	  -0.011051, -0.000218, -0.000218
#*# 	  -0.026884, -0.016051, 0.003949
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 190.0
#*# min_y = 35.0
#*# max_y = 190.0
